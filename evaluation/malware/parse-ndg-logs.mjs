import * as process from "node:process";
import { readFileSync } from "node:fs";

const pkg = process.argv[2];
const log = readFileSync("./ndg.log").toString();

const pkgs = [pkg];
switch (pkg) {
	case "event-stream":
		pkgs.push("flatmap-stream");
		break;
	case "express-cookies":
		pkgs.push("getcookies");
		break;
}

for (const pkg of pkgs) {
	const skip = new Set();
	for (const line of log.split(/\n/)) {
		// skip warning corresponding to 'Copying and pruning global'
		if (line.includes("Copying and pruning global")) {
			const what = /Copying and pruning global (.+)\./.exec(line)[1];
			skip.add(`Blocked access to ${what} for ${pkg}.`);
			continue;
		} else if (Array.from(skip).some((skip) => line.includes(skip))) {
			continue;
		}

		// skip unrelated logs
		if (
			line.includes("Normie requiring ") // not a violation
		) {
			continue;
		}

		// skip warnings not for the package
		if (!line.includes(` ${pkg}.`)) {
			continue;
		}

		console.log(line);
	}
}
