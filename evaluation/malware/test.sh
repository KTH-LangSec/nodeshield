#!/bin/sh

test() {
	testcase="$1"
	testcmd="$2"

	printf 'testing %s...' "$testcase"

	if [ -n "$NODE_SHIELD_CONTAINER" ]; then
		cd $testcase || return
		npm run "$testcmd" 1>/dev/null 2>/dev/null
		result=$?
		cd ..
	else
		docker run -it --rm \
			--workdir "/home/malware/$testcase" \
			--entrypoint 'npm' \
			'nodeshield-malware' \
			-- \
			'run' "$testcmd" \
			1>/dev/null 2>/dev/null
		result=$?
	fi

	printf '\r                                                        '
	if [ $result -eq 42 ] || [ $result -eq 82 ]; then
		printf 'PREVENTED'
	elif [ $result -eq 0 ]; then
		printf 'NOT PREVENTED'
	else
		printf "UNEXPECTED (got '%s')" "$result"
	fi
	printf '\r%s \n' "$testcase"
}

echo '== BUILDING =='
./.build.sh

echo
echo '== TESTING (NodeShield), SBOM =='
cases=$(ls -d ./*/)
for dir in $cases; do
	dir=${dir#./}
	dir=${dir%/}

	test "$dir" 'test-sbom'
done

echo '== TESTING (NodeShield), CBOM, inferred =='
cases=$(ls -d ./*/)
for dir in $cases; do
	dir=${dir#./}
	dir=${dir%/}

	test "$dir" 'test-inferred'
done

echo '== TESTING (NodeShield), CBOM, explicit =='
cases=$(ls -d ./*/)
for dir in $cases; do
	dir=${dir#./}
	dir=${dir%/}

	test "$dir" 'test-explicit'
done
